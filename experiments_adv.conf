# Word embeddings.
glove_300d {
  path = /scratch/sanjay/glove.840B.300d.txt
  size = 300
}
glove_300d_filtered {
  path = /scratch/sanjay/glove.840B.300d.txt.filtered
  size = 300
}
glove_300d_2w {
  path = /scratch/sanjay/glove_50_300_2.txt
  size = 300
}

# Distributed training configurations.
two_local_gpus {
  addresses {
    ps = [localhost:2222]
    worker = [localhost:2223, localhost:2224]
  }
  gpus = [0, 1]
}

# Main configuration.
best {
  # Computation limits.
  max_top_antecedents = 50
  max_training_sentences = 50
  top_span_ratio = 0.4

  # Model hyperparameters.
  filter_widths = [3, 4, 5]
  filter_size = 50
  char_embedding_size = 8
  char_vocab_path = "/scratch/sanjay/char_vocab.english.txt"
  elmo_hub_path = "/scratch/sanjay/elmo_module/"
  context_embeddings = ${glove_300d_filtered}
  head_embeddings = ${glove_300d_2w}
  contextualization_size = 200
  contextualization_layers = 3
  ffnn_size = 150
  ffnn_depth = 2
  feature_size = 20
  max_span_width = 30
  use_metadata = true
  use_features = true
  model_heads = true
  coref_depth = 2
  lm_layers = 3
  lm_size = 1024
  coarse_to_fine = true
  adv_perturb_length = 1
  adv_alpha = 0.4
  adv_finite_diff_small_constant = 0.1
  adv_num_iterations = 1

  # Learning hyperparameters.
  max_gradient_norm = 5.0
  lstm_dropout_rate = 0.4
  lexical_dropout_rate = 0.5
  dropout_rate = 0.2
  optimizer = adam
  learning_rate = 0.001
  decay_rate = 0.999
  decay_frequency = 100

  # Other.
  train_path = /scratch/sanjay/train.english.entity.jsonlines
  eval_path = /scratch/sanjay/dev.all.gold.jsonlines
  conll_eval_path = dev.english.v4_auto_conll
  lm_path = elmo_cache.hdf5
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  eval_frequency = 5000
  report_frequency = 100
  log_root = /scratch/sanjay/logs_new54
  adv_log_root = adv_checkpoint
  lee2018_log_root = /scratch/sanjay/pretrained2018
  cluster = ${two_local_gpus}
}

# For evaluation. Do not use for training (i.e. only for predict.py, evaluate.py, and demo.py). Rename `best` directory to `final`.
final = ${best} {
  context_embeddings = ${glove_300d_filtered}
  context_embeddings_full = ${glove_300d}
  head_embeddings = ${glove_300d_2w}
  lm_path = ""
  eval_path = dev.english.jsonlines
  conll_eval_path = dev.english.v4_auto_conll
}

# Baselines.
c2f_100_ant = ${best} {
  max_top_antecedents = 100
}
c2f_250_ant = ${best} {
  max_top_antecedents = 250
}
c2f_1_layer = ${best} {
  coref_depth = 1
}
c2f_3_layer = ${best} {
  coref_depth = 3
}
distance_50_ant = ${best} {
  max_top_antecedents = 50
  coarse_to_fine = false
  coref_depth = 1
}
distance_100_ant = ${distance_50_ant} {
  max_top_antecedents = 100
}
distance_250_ant = ${distance_50_ant} {
  max_top_antecedents = 250
}
